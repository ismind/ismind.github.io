<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>all</title>
    <url>/2019/12/26/all/</url>
    <content><![CDATA[<h1 id="算法训练营"><a href="#算法训练营" class="headerlink" title="算法训练营"></a>算法训练营</h1><h2 id="预习周"><a href="#预习周" class="headerlink" title="预习周"></a>预习周</h2><h3 id="第一课-数据结构和算法总览"><a href="#第一课-数据结构和算法总览" class="headerlink" title="第一课 数据结构和算法总览"></a>第一课 数据结构和算法总览</h3><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul>
<li><a href="http://naotu.baidu.com/file/b832f043e2ead159d584cca4efb19703?token=7a6a56eb2630548c" target="_blank" rel="noopener">数据结构脑图</a></li>
<li><a href="http://naotu.baidu.com/file/0a53d3a5343bd86375f348b2831d3610?token=5ab1de1c90d5f3ec" target="_blank" rel="noopener">算法脑图</a></li>
</ul>
<h3 id="第二课-训练准备和复杂度分析"><a href="#第二课-训练准备和复杂度分析" class="headerlink" title="第二课 训练准备和复杂度分析"></a>第二课 训练准备和复杂度分析</h3><h4 id="1-训练环境设置、编码技巧和Code-Style"><a href="#1-训练环境设置、编码技巧和Code-Style" class="headerlink" title="1. 训练环境设置、编码技巧和Code Style"></a>1. 训练环境设置、编码技巧和Code Style</h4><h5 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h5><ul>
<li><a href="http://github.com/microsoft/terminal" target="_blank" rel="noopener">Windows Microsoft New Terminal</a></li>
<li><a href="http://vscodethemes.com/" target="_blank" rel="noopener">VS Code Themes</a></li>
<li><a href="http://toutiao.io/posts/7w5ixl/preview" target="_blank" rel="noopener">教你打造一款颜值逆天的 VS Code</a></li>
<li><a href="http://juejin.im/post/5ce1365151882525ff28ed47" target="_blank" rel="noopener">炫酷的 VS Code 毛玻璃效果</a></li>
<li><a href="http://markhneedham.com/blog/2008/09/15/clean-code-book-review/" target="_blank" rel="noopener">自顶向下的编程方式</a></li>
<li><a href="http://leetcode-cn.com/problems/valid-palindrome/" target="_blank" rel="noopener">自顶向下编程的 LeetCode 例题</a></li>
</ul>
<h4 id="2-时间复杂度和空间复杂度分析"><a href="#2-时间复杂度和空间复杂度分析" class="headerlink" title="2. 时间复杂度和空间复杂度分析"></a>2. 时间复杂度和空间复杂度分析</h4><h5 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="http://www.zhihu.com/question/21387264" target="_blank" rel="noopener">如何理解算法时间复杂度的表示法</a></li>
<li><a href="http://en.wikipedia.org/wiki/Master_theorem_(analysis_of_algorithms" target="_blank" rel="noopener">Master theorem</a>)</li>
<li><a href="http://zh.wikipedia.org/wiki/主定理" target="_blank" rel="noopener">主定理</a></li>
</ul>
<h2 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h2><h3 id="第三课-数组、链表、跳表"><a href="#第三课-数组、链表、跳表" class="headerlink" title="第三课 数组、链表、跳表"></a>第三课 数组、链表、跳表</h3><h4 id="1-数组、链表、跳表的基本实现和特性"><a href="#1-数组、链表、跳表的基本实现和特性" class="headerlink" title="1. 数组、链表、跳表的基本实现和特性"></a>1. 数组、链表、跳表的基本实现和特性</h4><h5 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="http://developer.classpath.org/doc/java/util/ArrayList-source.html" target="_blank" rel="noopener">Java 源码分析（ArrayList）</a></li>
<li><a href="http://www.geeksforgeeks.org/implementing-a-linked-list-in-java-using-class/" target="_blank" rel="noopener">Linked List 的标准实现代码</a></li>
<li><a href="http://www.cs.cmu.edu/~adamchik/15-121/lectures/Linked Lists/code/LinkedList.java" target="_blank" rel="noopener">Linked List 示例代码</a></li>
<li><a href="http://developer.classpath.org/doc/java/util/LinkedList-source.html" target="_blank" rel="noopener">Java 源码分析（LinkedList）</a></li>
<li>LRU Cache - Linked list：<a href="http://leetcode-cn.com/problems/lru-cache" target="_blank" rel="noopener"> LRU 缓存机制</a></li>
<li>Redis - Skip List：<a href="http://redisbook.readthedocs.io/en/latest/internal-datastruct/skiplist.html" target="_blank" rel="noopener">跳跃表</a>、<a href="http://www.zhihu.com/question/20202931" target="_blank" rel="noopener">为啥 Redis 使用跳表（Skip List）而不是使用 Red-Black？</a></li>
</ul>
<h4 id="2-实战题目解析：移动零"><a href="#2-实战题目解析：移动零" class="headerlink" title="2. 实战题目解析：移动零"></a>2. 实战题目解析：移动零</h4><h5 id="Array-实战题目"><a href="#Array-实战题目" class="headerlink" title="Array 实战题目"></a>Array 实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/container-with-most-water/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/container-with-most-water/</a></li>
<li><a href="https://leetcode-cn.com/problems/move-zeroes/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/move-zeroes/</a></li>
<li><a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="noopener">https://leetcode.com/problems/climbing-stairs/</a></li>
<li><a href="https://leetcode-cn.com/problems/3sum/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/3sum/ </a>(高频老题）</li>
</ul>
<h4 id="3-实战题目解析：盛水最多的容器、爬楼梯"><a href="#3-实战题目解析：盛水最多的容器、爬楼梯" class="headerlink" title="3. 实战题目解析：盛水最多的容器、爬楼梯"></a>3. 实战题目解析：盛水最多的容器、爬楼梯</h4><h5 id="Array-实战题目-1"><a href="#Array-实战题目-1" class="headerlink" title="Array 实战题目"></a>Array 实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/container-with-most-water/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/container-with-most-water/</a></li>
<li><a href="https://leetcode-cn.com/problems/move-zeroes/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/move-zeroes/</a></li>
<li><a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="noopener">https://leetcode.com/problems/climbing-stairs/</a></li>
<li><a href="https://leetcode-cn.com/problems/3sum/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/3sum/ </a>(高频老题）</li>
</ul>
<h4 id="4-实战题目解析：3数之和、环形链表"><a href="#4-实战题目解析：3数之和、环形链表" class="headerlink" title="4. 实战题目解析：3数之和、环形链表"></a>4. 实战题目解析：3数之和、环形链表</h4><p>两数之和题目：<a href="https://leetcode-cn.com/problems/two-sum/" target="_blank" rel="noopener"> https://leetcode-cn.com/problems/two-sum/</a></p>
<h5 id="Array-实战题目-2"><a href="#Array-实战题目-2" class="headerlink" title="Array 实战题目"></a>Array 实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/container-with-most-water/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/container-with-most-water/</a></li>
<li><a href="https://leetcode-cn.com/problems/move-zeroes/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/move-zeroes/</a></li>
<li><a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="noopener">https://leetcode.com/problems/climbing-stairs/</a></li>
<li><a href="https://leetcode-cn.com/problems/3sum/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/3sum/ </a>(高频老题）</li>
</ul>
<h5 id="Linked-List-实战题目"><a href="#Linked-List-实战题目" class="headerlink" title="Linked List 实战题目"></a>Linked List 实战题目</h5><ul>
<li><a href="https://leetcode.com/problems/reverse-linked-list/" target="_blank" rel="noopener">https://leetcode.com/problems/reverse-linked-list/</a></li>
<li><a href="https://leetcode.com/problems/swap-nodes-in-pairs" target="_blank" rel="noopener">https://leetcode.com/problems/swap-nodes-in-pairs</a></li>
<li><a href="https://leetcode.com/problems/linked-list-cycle" target="_blank" rel="noopener">https://leetcode.com/problems/linked-list-cycle</a></li>
<li><a href="https://leetcode.com/problems/linked-list-cycle-ii" target="_blank" rel="noopener">https://leetcode.com/problems/linked-list-cycle-ii</a></li>
<li><a href="https://leetcode.com/problems/reverse-nodes-in-k-group/" target="_blank" rel="noopener">https://leetcode.com/problems/reverse-nodes-in-k-group/</a></li>
</ul>
<h5 id="课后作业"><a href="#课后作业" class="headerlink" title="课后作业"></a>课后作业</h5><ul>
<li><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/</a></li>
<li><a href="https://leetcode-cn.com/problems/rotate-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/rotate-array/</a></li>
<li><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-two-sorted-lists/</a></li>
<li><a href="https://leetcode-cn.com/problems/merge-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-sorted-array/</a></li>
<li><a href="https://leetcode-cn.com/problems/two-sum/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/two-sum/</a></li>
<li><a href="https://leetcode-cn.com/problems/move-zeroes/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/move-zeroes/</a></li>
<li><a href="https://leetcode-cn.com/problems/plus-one/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/plus-one/</a></li>
</ul>
<p><a href="http://u.geekbang.org/lesson/1?article=144228" target="_blank" rel="noopener">戳此了解每周课后作业要求及提交方式</a></p>
<h3 id="第四课-栈、队列、优先队列、双端队列"><a href="#第四课-栈、队列、优先队列、双端队列" class="headerlink" title="第四课 栈、队列、优先队列、双端队列"></a>第四课 栈、队列、优先队列、双端队列</h3><h4 id="1-栈和队列的实现与特性"><a href="#1-栈和队列的实现与特性" class="headerlink" title="1. 栈和队列的实现与特性"></a>1. 栈和队列的实现与特性</h4><h5 id="参考链接-3"><a href="#参考链接-3" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="http://docs.oracle.com/javase/10/docs/api/java/util/PriorityQueue.html" target="_blank" rel="noopener">Java 的 PriorityQueue 文档</a></li>
<li><a href="http://developer.classpath.org/doc/java/util/Stack-source.html" target="_blank" rel="noopener">Java 的 Stack 源码</a></li>
<li><a href="http://fuseyism.com/classpath/doc/java/util/Queue-source.html" target="_blank" rel="noopener">Java 的 Queue 源码</a></li>
<li><a href="http://docs.python.org/2/library/heapq.html" target="_blank" rel="noopener">Python 的 heapq</a></li>
<li><a href="http://docs.python.org/2/library/collections.html" target="_blank" rel="noopener">高性能的 container 库</a></li>
</ul>
<h4 id="2-实战题目解析：有效的括号、最小栈等问题"><a href="#2-实战题目解析：有效的括号、最小栈等问题" class="headerlink" title="2. 实战题目解析：有效的括号、最小栈等问题"></a>2. 实战题目解析：有效的括号、最小栈等问题</h4><h5 id="预习题目"><a href="#预习题目" class="headerlink" title="预习题目"></a>预习题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/valid-parentheses/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/valid-parentheses/</a></li>
<li><a href="https://leetcode-cn.com/problems/min-stack/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/min-stack/</a></li>
</ul>
<h5 id="实战题目"><a href="#实战题目" class="headerlink" title="实战题目"></a>实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/largest-rectangle-in-histogram" target="_blank" rel="noopener">https://leetcode-cn.com/problems/largest-rectangle-in-histogram</a></li>
<li><a href="https://leetcode-cn.com/problems/sliding-window-maximum" target="_blank" rel="noopener">https://leetcode-cn.com/problems/sliding-window-maximum</a></li>
</ul>
<h5 id="课后作业-1"><a href="#课后作业-1" class="headerlink" title="课后作业"></a>课后作业</h5><ul>
<li>用 add first 或 add last 这套新的 API 改写 Deque 的代码</li>
<li>分析 Queue 和 Priority Queue 的源码</li>
<li><a href="https://leetcode.com/problems/design-circular-deque" target="_blank" rel="noopener">https://leetcode.com/problems/design-circular-deque</a></li>
<li><a href="https://leetcode.com/problems/trapping-rain-water/" target="_blank" rel="noopener">https://leetcode.com/problems/trapping-rain-water/</a></li>
</ul>
<p>说明：改写代码和分析源码这两项作业，同学们需要在第 1 周的学习总结中完成。如果不熟悉 Java 语言，这两项作业可选做。</p>
<h2 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h2><h3 id="第五课-哈希表、映射、集合"><a href="#第五课-哈希表、映射、集合" class="headerlink" title="第五课 哈希表、映射、集合"></a>第五课 哈希表、映射、集合</h3><h4 id="1-哈希表、映射、集合的实现与特性"><a href="#1-哈希表、映射、集合的实现与特性" class="headerlink" title="1. 哈希表、映射、集合的实现与特性"></a>1. 哈希表、映射、集合的实现与特性</h4><h5 id="参考链接-4"><a href="#参考链接-4" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="http://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/util/Set.html" target="_blank" rel="noopener">Java Set 文档</a></li>
<li><a href="http://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/util/Map.html" target="_blank" rel="noopener">Java Map 文档</a></li>
</ul>
<h5 id="课后作业-2"><a href="#课后作业-2" class="headerlink" title="课后作业"></a>课后作业</h5><p>写一个关于 HashMap 的小总结。<br>说明：对于不熟悉 Java 语言的同学，此项作业可选做。</p>
<h4 id="2-实战题目解析：有效的字母异位词等问题"><a href="#2-实战题目解析：有效的字母异位词等问题" class="headerlink" title="2. 实战题目解析：有效的字母异位词等问题"></a>2. 实战题目解析：有效的字母异位词等问题</h4><h5 id="实战题目-课后作业"><a href="#实战题目-课后作业" class="headerlink" title="实战题目 / 课后作业"></a>实战题目 / 课后作业</h5><ul>
<li><a href="https://leetcode-cn.com/problems/valid-anagram/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/valid-anagram/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/group-anagrams/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/group-anagrams/</a></li>
<li><a href="https://leetcode-cn.com/problems/two-sum/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/two-sum/description/</a></li>
</ul>
<h5 id="参考链接-5"><a href="#参考链接-5" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><h6 id="养成收藏精选代码的习惯（示例）"><a href="#养成收藏精选代码的习惯（示例）" class="headerlink" title="养成收藏精选代码的习惯（示例）"></a><a href="http://shimo.im/docs/R6g9WJV89QkHrDhr" target="_blank" rel="noopener">养成收藏精选代码的习惯（示例）</a></h6></li>
</ul>
<h6 id="Anagram-group-anagrams-two-sum"><a href="#Anagram-group-anagrams-two-sum" class="headerlink" title="Anagram, group-anagrams, two sum"></a>Anagram, group-anagrams, two sum</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Valid anagram</span><br><span class="line"></span><br><span class="line"># 思路：手动模拟hashtable，将字符串”a-z“的ASCII码作key，计数求差异    </span><br><span class="line">   <span class="function">def  <span class="title">isAnagram</span><span class="params">(self, s: str, t: str)</span> -&gt; bool:</span></span><br><span class="line"><span class="function">        arr1, arr2 </span>= [<span class="number">0</span>]*<span class="number">26</span>, [<span class="number">0</span>]*<span class="number">26</span></span><br><span class="line">        <span class="keyword">for</span> i in s:</span><br><span class="line">            arr1[ord(i) - ord(<span class="string">'a'</span>)] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i in t:</span><br><span class="line">            arr2[ord(i) - ord(<span class="string">'a'</span>)] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> arr1 == arr2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 思路：map计数，对比计数差异</span><br><span class="line">    <span class="function">def <span class="title">isAnagram</span><span class="params">(self, s: str, t: str)</span> -&gt; bool:</span></span><br><span class="line"><span class="function">        dict1, dict2 </span>= &#123;&#125;, &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> item in s:</span><br><span class="line">            dict1[item] = dict1.get(item,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> item in t:</span><br><span class="line">            dict2[item] = dict2.get(item,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> dict1 == dict2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 思路：数组排序后比较差异</span><br><span class="line">    <span class="function">def <span class="title">isAnagram</span><span class="params">(self, s: str, t: str)</span> -&gt; bool:</span></span><br><span class="line"><span class="function">        return <span class="title">sorted</span><span class="params">(s)</span> </span>== sorted(t)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAnagram</span><span class="params">(String s, String t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.length() != t.length()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> [] a = <span class="keyword">new</span> <span class="keyword">int</span> [<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">for</span>(Character c : s.toCharArray()) a[c - <span class="string">'a'</span>]++;</span><br><span class="line">        <span class="keyword">for</span>(Character c : t.toCharArray()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[c -<span class="string">'a'</span>] == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            a[c - <span class="string">'a'</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAnagram</span><span class="params">(String s1, String s2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] freq = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s1.length(); i++) freq[s1.charAt(i)]++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s2.length(); i++) <span class="keyword">if</span>(--freq[s2.charAt(i)] &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> s1.length() == s2.length();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAnagram</span><span class="params">(String s, String t)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>[] sChar = s.toCharArray();</span><br><span class="line">    <span class="keyword">char</span>[] tChar = t.toCharArray();</span><br><span class="line">    Arrays.sort(sChar);</span><br><span class="line">    Arrays.sort(tChar);</span><br><span class="line">    <span class="keyword">return</span> Arrays.equals(sChar, tChar);   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Group Anagrams:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">def <span class="title">groupAnagrams</span><span class="params">(self, strs)</span>:</span></span><br><span class="line"><span class="function">    d </span>= &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">for</span> w in <span class="title">sorted</span><span class="params">(strs)</span>:</span></span><br><span class="line"><span class="function">        key </span>= tuple(sorted(w))</span><br><span class="line">        d[key] = d.get(key, []) + [w]</span><br><span class="line">    <span class="keyword">return</span> d.values()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">def <span class="title">groupAnagrams</span><span class="params">(self, strs)</span>:</span></span><br><span class="line"><span class="function">    dic </span>= &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">for</span> item in <span class="title">sorted</span><span class="params">(strs)</span>:</span></span><br><span class="line"><span class="function">        sortedItem </span>= <span class="string">''</span>.join(sorted(item))</span><br><span class="line">        dic[sortedItem] = dic.get(sortedItem, []) + [item]</span><br><span class="line">    <span class="keyword">return</span> dic.values()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; groupAnagrams(String[] strs) &#123;</span><br><span class="line">	List&lt;List&lt;String&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    HashMap&lt;String, List&lt;String&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    Arrays.sort(strs);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strs.length; i++) &#123;</span><br><span class="line">    	String temp = strs[i];</span><br><span class="line">    	<span class="keyword">char</span>[] ch = temp.toCharArray();</span><br><span class="line">    	Arrays.sort(ch);</span><br><span class="line">    	<span class="keyword">if</span> (map.containsKey(String.valueOf(ch))) &#123;</span><br><span class="line">    		map.get(String.valueOf(ch)).add(strs[i]);</span><br><span class="line">    	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    		List&lt;String&gt; each = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    		each.add(strs[i]);</span><br><span class="line">    		map.put(String.valueOf(ch), each);</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (List&lt;String&gt; item: map.values()) &#123;</span><br><span class="line">    	res.add(item);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Two sum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function">def <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line"><span class="function">        d </span>= dict()</span><br><span class="line">        <span class="keyword">for</span> index,<span class="function">num in <span class="title">enumerate</span><span class="params">(nums)</span>:</span></span><br><span class="line"><span class="function">            <span class="keyword">if</span> d.<span class="title">get</span><span class="params">(num)</span> </span>== None:</span><br><span class="line">                d[target - num] = index</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> [d.get(num), index]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; tracker = </span><br><span class="line">            <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span> len = nums.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (tracker.containsKey(nums[i]))&#123;</span><br><span class="line">                <span class="keyword">int</span> left = tracker.get(nums[i]);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;left+<span class="number">1</span>, i+<span class="number">1</span>&#125;;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                tracker.put(target - nums[i], i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="第六课-树、二叉树、二叉搜索树"><a href="#第六课-树、二叉树、二叉搜索树" class="headerlink" title="第六课 树、二叉树、二叉搜索树"></a>第六课 树、二叉树、二叉搜索树</h3><h4 id="1-树、二叉树、二叉搜索树的实现和特性"><a href="#1-树、二叉树、二叉搜索树的实现和特性" class="headerlink" title="1. 树、二叉树、二叉搜索树的实现和特性"></a>1. 树、二叉树、二叉搜索树的实现和特性</h4><h5 id="参考链接-6"><a href="#参考链接-6" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="https://visualgo.net/zh/bst" target="_blank" rel="noopener">二叉搜索树 Demo</a></li>
</ul>
<h5 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h5><p>树的面试题解法一般都是递归，为什么？<br>说明：同学们可以将自己的思考写在课程下方的留言区一起讨论，也可以写在第 2 周的学习总结中。</p>
<h4 id="2-实战题目解析：二叉树的中序遍历"><a href="#2-实战题目解析：二叉树的中序遍历" class="headerlink" title="2. 实战题目解析：二叉树的中序遍历"></a>2. 实战题目解析：二叉树的中序遍历</h4><h5 id="参考链接-7"><a href="#参考链接-7" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="https://visualgo.net/zh/bst" target="_blank" rel="noopener">树的遍历 Demo</a></li>
</ul>
<h5 id="实战题目-课后作业-1"><a href="#实战题目-课后作业-1" class="headerlink" title="实战题目 / 课后作业"></a>实战题目 / 课后作业</h5><ul>
<li><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/binary-tree-inorder-traversal/</a></li>
<li><a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/binary-tree-preorder-traversal/</a></li>
<li><a href="https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/</a></li>
<li><a href="https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/description" target="_blank" rel="noopener">https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/</a></li>
<li><a href="https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/</a></li>
</ul>
<h3 id="第七课-泛型递归、树的递归"><a href="#第七课-泛型递归、树的递归" class="headerlink" title="第七课 泛型递归、树的递归"></a>第七课 泛型递归、树的递归</h3><h4 id="1-递归的实现、特性以及思维要点"><a href="#1-递归的实现、特性以及思维要点" class="headerlink" title="1. 递归的实现、特性以及思维要点"></a>1. 递归的实现、特性以及思维要点</h4><h5 id="参考链接-8"><a href="#参考链接-8" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="http://shimo.im/docs/DjqqGCT3xqDYwPyY" target="_blank" rel="noopener">递归代码模板</a></li>
</ul>
<h6 id="模板："><a href="#模板：" class="headerlink" title="模板："></a>模板：</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Python 代码模板</span><br><span class="line"><span class="function">def <span class="title">recursion</span><span class="params">(level, param1, param2, ...)</span>: </span></span><br><span class="line"><span class="function">    # recursion terminator </span></span><br><span class="line"><span class="function">    <span class="keyword">if</span> level &gt; MAX_LEVEL: </span></span><br><span class="line"><span class="function">	   process_result </span></span><br><span class="line"><span class="function">	   return </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    # process logic in current level </span></span><br><span class="line"><span class="function">    <span class="title">process</span><span class="params">(level, data...)</span> </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    # drill down </span></span><br><span class="line"><span class="function">    self.<span class="title">recursion</span><span class="params">(level + <span class="number">1</span>, p1, ...)</span> </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    # reverse the current level status <span class="keyword">if</span> needed</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">Java 代码模板</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">recur</span><span class="params">(<span class="keyword">int</span> level, <span class="keyword">int</span> param)</span> </span>&#123; </span><br><span class="line"></span><br><span class="line">  <span class="comment">// terminator </span></span><br><span class="line">  <span class="keyword">if</span> (level &gt; MAX_LEVEL) &#123; </span><br><span class="line">    <span class="comment">// process result </span></span><br><span class="line">    <span class="keyword">return</span>; </span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">  <span class="comment">// process current logic </span></span><br><span class="line">  process(level, param); </span><br><span class="line"></span><br><span class="line">  <span class="comment">// drill down </span></span><br><span class="line">  recur( level: level + <span class="number">1</span>, newParam); </span><br><span class="line"></span><br><span class="line">  <span class="comment">// restore current status </span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-实战题目解析：爬楼梯、括号生成等问题"><a href="#2-实战题目解析：爬楼梯、括号生成等问题" class="headerlink" title="2. 实战题目解析：爬楼梯、括号生成等问题"></a>2. 实战题目解析：爬楼梯、括号生成等问题</h4><h5 id="实战题目-1"><a href="#实战题目-1" class="headerlink" title="实战题目"></a>实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/climbing-stairs/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/climbing-stairs/</a></li>
<li><a href="https://leetcode-cn.com/problems/generate-parentheses/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/generate-parentheses/</a></li>
<li><a href="https://leetcode-cn.com/problems/invert-binary-tree/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/invert-binary-tree/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/validate-binary-search-tree" target="_blank" rel="noopener">https://leetcode-cn.com/problems/validate-binary-search-tree</a></li>
<li><a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-depth-of-binary-tree</a></li>
<li><a href="https://leetcode-cn.com/problems/minimum-depth-of-binary-tree" target="_blank" rel="noopener">https://leetcode-cn.com/problems/minimum-depth-of-binary-tree</a></li>
<li><a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/</a></li>
</ul>
<h5 id="每日一课"><a href="#每日一课" class="headerlink" title="每日一课"></a>每日一课</h5><ul>
<li><a href="https://time.geekbang.org/dailylesson/detail/100028406" target="_blank" rel="noopener">如何优雅地计算斐波那契数列</a></li>
</ul>
<h5 id="课后作业-3"><a href="#课后作业-3" class="headerlink" title="课后作业"></a>课后作业</h5><ul>
<li><a href="https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/</a></li>
<li><a href="https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal" target="_blank" rel="noopener">https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal</a></li>
<li><a href="https://leetcode-cn.com/problems/combinations/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/combinations/</a></li>
<li><a href="https://leetcode-cn.com/problems/permutations/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/permutations/</a></li>
<li><a href="https://leetcode-cn.com/problems/permutations-ii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/permutations-ii/</a></li>
</ul>
<h3 id="第八课-分治、回溯"><a href="#第八课-分治、回溯" class="headerlink" title="第八课 分治、回溯"></a>第八课 分治、回溯</h3><h4 id="1-分治、回溯的实现和特性"><a href="#1-分治、回溯的实现和特性" class="headerlink" title="1. 分治、回溯的实现和特性"></a>1. 分治、回溯的实现和特性</h4><h5 id="参考链接-9"><a href="#参考链接-9" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="https://shimo.im/docs/3xvghYh3JJPKwdvt" target="_blank" rel="noopener">分治代码模板</a></li>
<li><a href="https://leetcode-cn.com/problems/generate-parentheses/" target="_blank" rel="noopener">括号生成问题</a></li>
</ul>
<h6 id="模板：-1"><a href="#模板：-1" class="headerlink" title="模板："></a>模板：</h6><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="function">def <span class="title">divide_conquer</span><span class="params">(problem, param1, param2, ...)</span>: </span></span><br><span class="line"><span class="function">  # recursion terminator </span></span><br><span class="line"><span class="function">  <span class="keyword">if</span> problem is None: </span></span><br><span class="line"><span class="function">	print_result </span></span><br><span class="line"><span class="function">	return </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  # prepare data </span></span><br><span class="line"><span class="function">  data </span>= prepare_data(problem) </span><br><span class="line">  subproblems = split_problem(problem, data) </span><br><span class="line"></span><br><span class="line">  # conquer subproblems </span><br><span class="line">  subresult1 = self.divide_conquer(subproblems[<span class="number">0</span>], p1, ...) </span><br><span class="line">  subresult2 = self.divide_conquer(subproblems[<span class="number">1</span>], p1, ...) </span><br><span class="line">  subresult3 = self.divide_conquer(subproblems[<span class="number">2</span>], p1, ...) </span><br><span class="line">  …</span><br><span class="line"></span><br><span class="line">  # process and generate the final result </span><br><span class="line">  result = process_result(subresult1, subresult2, subresult3, …)</span><br><span class="line">	</span><br><span class="line">  # revert the current level states</span><br></pre></td></tr></table></figure>
<h4 id="2-实战题目解析：Pow-x-n-、子集"><a href="#2-实战题目解析：Pow-x-n-、子集" class="headerlink" title="2. 实战题目解析：Pow(x,n)、子集"></a>2. 实战题目解析：Pow(x,n)、子集</h4><h5 id="预习题目-1"><a href="#预习题目-1" class="headerlink" title="预习题目"></a>预习题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/powx-n/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/powx-n/</a></li>
<li><a href="https://leetcode-cn.com/problems/subsets/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/subsets/</a></li>
</ul>
<h5 id="参考链接-10"><a href="#参考链接-10" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="http://www.matrix67.com/blog/archives/361" target="_blank" rel="noopener">牛顿迭代法原理</a></li>
<li><a href="http://www.voidcn.com/article/p-eudisdmk-zm.html" target="_blank" rel="noopener">牛顿迭代法代码</a></li>
</ul>
<h4 id="3-实战题目解析：电话号码的字母组合、N皇后"><a href="#3-实战题目解析：电话号码的字母组合、N皇后" class="headerlink" title="3. 实战题目解析：电话号码的字母组合、N皇后"></a>3. 实战题目解析：电话号码的字母组合、N皇后</h4><h5 id="实战题目-2"><a href="#实战题目-2" class="headerlink" title="实战题目"></a>实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/majority-element/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/majority-element/description/ </a>（简单、但是高频）</li>
<li><a href="https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/</a></li>
<li><a href="https://leetcode-cn.com/problems/n-queens/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/n-queens/</a></li>
</ul>
<h2 id="第三周"><a href="#第三周" class="headerlink" title="第三周"></a>第三周</h2><h3 id="第九课-深度优先搜索和广度优先搜索"><a href="#第九课-深度优先搜索和广度优先搜索" class="headerlink" title="第九课 深度优先搜索和广度优先搜索"></a>第九课 深度优先搜索和广度优先搜索</h3><h4 id="1-深度优先搜索、广度优先搜索的实现和特性"><a href="#1-深度优先搜索、广度优先搜索的实现和特性" class="headerlink" title="1. 深度优先搜索、广度优先搜索的实现和特性"></a>1. 深度优先搜索、广度优先搜索的实现和特性</h4><h5 id="参考链接-11"><a href="#参考链接-11" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="http://shimo.im/docs/ddgwCccJQKxkrcTq" target="_blank" rel="noopener">DFS 代码模板（递归写法、非递归写法）</a></li>
<li><a href="http://shimo.im/docs/P8TqKHGKt3ytkYYd" target="_blank" rel="noopener">BFS 代码模板</a></li>
</ul>
<h6 id="DFS模板"><a href="#DFS模板" class="headerlink" title="DFS模板"></a>DFS模板</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">递归写法</span><br><span class="line">visited = set() </span><br><span class="line"></span><br><span class="line"><span class="function">def <span class="title">dfs</span><span class="params">(node, visited)</span>:</span></span><br><span class="line"><span class="function">    <span class="keyword">if</span> node in visited: # terminator</span></span><br><span class="line"><span class="function">    	# already visited </span></span><br><span class="line"><span class="function">    	return </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	visited.<span class="title">add</span><span class="params">(node)</span> </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	# process current node here. </span></span><br><span class="line"><span class="function">	...</span></span><br><span class="line"><span class="function">	<span class="keyword">for</span> next_node in node.<span class="title">children</span><span class="params">()</span>: </span></span><br><span class="line"><span class="function">		<span class="keyword">if</span> next_node not in visited: </span></span><br><span class="line"><span class="function">			<span class="title">dfs</span><span class="params">(next_node, visited)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">非递归写法</span></span><br><span class="line"><span class="function">def <span class="title">DFS</span><span class="params">(self, tree)</span>: </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	<span class="keyword">if</span> tree.root is None: </span></span><br><span class="line"><span class="function">		return [] </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">	visited, stack </span>= [], [tree.root]</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> stack: </span><br><span class="line">		node = stack.pop() </span><br><span class="line">		visited.add(node)</span><br><span class="line"></span><br><span class="line">		process (node) </span><br><span class="line">		nodes = generate_related_nodes(node) </span><br><span class="line">		stack.push(nodes) </span><br><span class="line"></span><br><span class="line">	# other processing work </span><br><span class="line">	...</span><br></pre></td></tr></table></figure>
<h6 id="BFS模板"><a href="#BFS模板" class="headerlink" title="BFS模板"></a>BFS模板</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">def <span class="title">BFS</span><span class="params">(graph, start, end)</span>:</span></span><br><span class="line"><span class="function">    visited </span>= set()</span><br><span class="line">	queue = [] </span><br><span class="line">	queue.append([start]) </span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> queue: </span><br><span class="line">		node = queue.pop() </span><br><span class="line">		visited.add(node)</span><br><span class="line"></span><br><span class="line">		process(node) </span><br><span class="line">		nodes = generate_related_nodes(node) </span><br><span class="line">		queue.push(nodes)</span><br><span class="line"></span><br><span class="line">	# other processing work </span><br><span class="line">	...</span><br></pre></td></tr></table></figure>
<h4 id="2-实战题目解析：二叉树的层次遍历等问题"><a href="#2-实战题目解析：二叉树的层次遍历等问题" class="headerlink" title="2. 实战题目解析：二叉树的层次遍历等问题"></a>2. 实战题目解析：二叉树的层次遍历等问题</h4><h5 id="实战题目-3"><a href="#实战题目-3" class="headerlink" title="实战题目"></a>实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/#/description" target="_blank" rel="noopener">https://leetcode-cn.com/problems/binary-tree-level-order-traversal/#/description</a></li>
<li><a href="https://leetcode-cn.com/problems/minimum-genetic-mutation/#/description" target="_blank" rel="noopener">https://leetcode-cn.com/problems/minimum-genetic-mutation/#/description</a></li>
<li><a href="https://leetcode-cn.com/problems/generate-parentheses/#/description" target="_blank" rel="noopener">https://leetcode-cn.com/problems/generate-parentheses/#/description</a></li>
<li><a href="https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/#/description" target="_blank" rel="noopener">https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/#/description</a></li>
</ul>
<h5 id="课后作业-4"><a href="#课后作业-4" class="headerlink" title="课后作业"></a>课后作业</h5><ul>
<li><a href="https://leetcode-cn.com/problems/word-ladder/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/word-ladder/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/word-ladder-ii/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/word-ladder-ii/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/number-of-islands/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/number-of-islands/</a></li>
<li><a href="https://leetcode-cn.com/problems/minesweeper/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/minesweeper/description/</a></li>
</ul>
<h3 id="第十课-贪心算法"><a href="#第十课-贪心算法" class="headerlink" title="第十课  贪心算法"></a>第十课  贪心算法</h3><h4 id="贪心的实现、特性及实战题目解析"><a href="#贪心的实现、特性及实战题目解析" class="headerlink" title="贪心的实现、特性及实战题目解析"></a>贪心的实现、特性及实战题目解析</h4><h5 id="参考链接-12"><a href="#参考链接-12" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="https://leetcode-cn.com/problems/coin-change/" target="_blank" rel="noopener">coin change 题目</a></li>
<li><a href="https://zh.wikipedia.org/wiki/动态规划" target="_blank" rel="noopener">动态规划定义</a></li>
</ul>
<h5 id="课后作业-5"><a href="#课后作业-5" class="headerlink" title="课后作业"></a>课后作业</h5><ul>
<li><a href="https://leetcode-cn.com/problems/lemonade-change/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/lemonade-change/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/assign-cookies/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/assign-cookies/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/walking-robot-simulation/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/walking-robot-simulation/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/jump-game/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/jump-game/ </a>、<a href="https://leetcode-cn.com/problems/jump-game-ii/" target="_blank" rel="noopener"> https://leetcode-cn.com/problems/jump-game-ii/</a></li>
</ul>
<h3 id="第十一课-二分查找"><a href="#第十一课-二分查找" class="headerlink" title="第十一课  二分查找"></a>第十一课  二分查找</h3><h4 id="二分查找的实现、特性及实战题目解析"><a href="#二分查找的实现、特性及实战题目解析" class="headerlink" title="二分查找的实现、特性及实战题目解析"></a>二分查找的实现、特性及实战题目解析</h4><h5 id="参考链接-13"><a href="#参考链接-13" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="https://shimo.im/docs/hjQqRQkGgwd9g36J" target="_blank" rel="noopener">二分查找代码模板</a></li>
<li><a href="https://www.beyond3d.com/content/articles/8/" target="_blank" rel="noopener">Fast InvSqrt() 扩展阅读</a></li>
</ul>
<h5 id="实战题目-4"><a href="#实战题目-4" class="headerlink" title="实战题目"></a>实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/sqrtx/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/sqrtx/</a></li>
<li><a href="https://leetcode-cn.com/problems/valid-perfect-square/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/valid-perfect-square/</a></li>
</ul>
<h5 id="课后作业-6"><a href="#课后作业-6" class="headerlink" title="课后作业"></a>课后作业</h5><ul>
<li><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/search-in-rotated-sorted-array/</a></li>
<li><a href="https://leetcode-cn.com/problems/search-a-2d-matrix/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/search-a-2d-matrix/</a></li>
<li><a href="https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/</a></li>
<li>使用二分查找，寻找一个半有序数组 [4, 5, 6, 7, 0, 1, 2] 中间无序的地方<br>说明：同学们可以将自己的思路、代码写在第 3 周的学习总结中</li>
</ul>
<h6 id="二分查找模板"><a href="#二分查找模板" class="headerlink" title="二分查找模板"></a>二分查找模板</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">left, right = <span class="number">0</span>, len(array) - <span class="number">1</span> </span><br><span class="line"><span class="keyword">while</span> left &lt;= right: </span><br><span class="line">	  mid = (left + right) / <span class="number">2</span> </span><br><span class="line">	  <span class="keyword">if</span> array[mid] == target: </span><br><span class="line">		    # find the target!! </span><br><span class="line">		    <span class="keyword">break</span> or <span class="keyword">return</span> result </span><br><span class="line">	  elif array[mid] &lt; target: </span><br><span class="line">		    left = mid + <span class="number">1</span> </span><br><span class="line">	  <span class="keyword">else</span>: </span><br><span class="line">		    right = mid - <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="第四周-期中复习、考试"><a href="#第四周-期中复习、考试" class="headerlink" title="第四周  期中复习、考试"></a>第四周  期中复习、考试</h2><h2 id="第五周"><a href="#第五周" class="headerlink" title="第五周"></a>第五周</h2><h3 id="第十二课-动态规划"><a href="#第十二课-动态规划" class="headerlink" title="第十二课  动态规划"></a>第十二课  动态规划</h3><h4 id="1-动态规划的实现及关键点"><a href="#1-动态规划的实现及关键点" class="headerlink" title="1. 动态规划的实现及关键点"></a>1. 动态规划的实现及关键点</h4><h5 id="参考链接-14"><a href="#参考链接-14" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="http://shimo.im/docs/DjqqGCT3xqDYwPyY/" target="_blank" rel="noopener">递归代码模板</a></li>
<li><a href="http://shimo.im/docs/3xvghYh3JJPKwdvt/" target="_blank" rel="noopener">分治代码模板</a></li>
<li><a href="https://en.wikipedia.org/wiki/Dynamic_programming" target="_blank" rel="noopener">动态规划定义</a></li>
</ul>
<h6 id="递归模板"><a href="#递归模板" class="headerlink" title="递归模板"></a>递归模板</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Python 代码模板</span><br><span class="line">def recursion(level, param1, param2, ...): </span><br><span class="line">    # recursion terminator </span><br><span class="line">    if level &gt; MAX_LEVEL: </span><br><span class="line">	   process_result </span><br><span class="line">	   return </span><br><span class="line"></span><br><span class="line">    # process logic in current level </span><br><span class="line">    process(level, data...) </span><br><span class="line"></span><br><span class="line">    # drill down </span><br><span class="line">    self.recursion(level + 1, p1, ...) </span><br><span class="line"></span><br><span class="line">    # reverse the current level status if needed</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Java 代码模板</span><br><span class="line">public void recur(int level, int param) &#123; </span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; terminator </span><br><span class="line">  if (level &gt; MAX_LEVEL) &#123; </span><br><span class="line">    &#x2F;&#x2F; process result </span><br><span class="line">    return; </span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; process current logic </span><br><span class="line">  process(level, param); </span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; drill down </span><br><span class="line">  recur( level: level + 1, newParam); </span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; restore current status </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="分治代码模板"><a href="#分治代码模板" class="headerlink" title="分治代码模板"></a>分治代码模板</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def divide_conquer(problem, param1, param2, ...): </span><br><span class="line">  # recursion terminator </span><br><span class="line">  if problem is None: </span><br><span class="line">	print_result </span><br><span class="line">	return </span><br><span class="line"></span><br><span class="line">  # prepare data </span><br><span class="line">  data &#x3D; prepare_data(problem) </span><br><span class="line">  subproblems &#x3D; split_problem(problem, data) </span><br><span class="line"></span><br><span class="line">  # conquer subproblems </span><br><span class="line">  subresult1 &#x3D; self.divide_conquer(subproblems[0], p1, ...) </span><br><span class="line">  subresult2 &#x3D; self.divide_conquer(subproblems[1], p1, ...) </span><br><span class="line">  subresult3 &#x3D; self.divide_conquer(subproblems[2], p1, ...) </span><br><span class="line">  …</span><br><span class="line"></span><br><span class="line">  # process and generate the final result </span><br><span class="line">  result &#x3D; process_result(subresult1, subresult2, subresult3, …)</span><br><span class="line">	</span><br><span class="line">  # revert the current level states</span><br></pre></td></tr></table></figure>
<h4 id="2-DP例题解析：Fibonacci数列、路径计数"><a href="#2-DP例题解析：Fibonacci数列、路径计数" class="headerlink" title="2. DP例题解析：Fibonacci数列、路径计数"></a>2. DP例题解析：Fibonacci数列、路径计数</h4><h4 id="3-DP例题解析：最长公共子序列"><a href="#3-DP例题解析：最长公共子序列" class="headerlink" title="3. DP例题解析：最长公共子序列"></a>3. DP例题解析：最长公共子序列</h4><h5 id="参考链接-15"><a href="#参考链接-15" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="https://leetcode-cn.com/problems/unique-paths/" target="_blank" rel="noopener">不同路径题目</a></li>
<li><a href="https://leetcode-cn.com/problems/unique-paths-ii/" target="_blank" rel="noopener">不同路径 2 题目</a></li>
<li><a href="https://leetcode-cn.com/problems/longest-common-subsequence/" target="_blank" rel="noopener">最长公共子序列题目</a></li>
<li><a href="https://www.bilibili.com/video/av53233912?from=search&amp;seid=2847395688604491997" target="_blank" rel="noopener">MIT 动态规划课程最短路径算法</a></li>
</ul>
<h4 id="4-实战题目解析：三角形最小路径和"><a href="#4-实战题目解析：三角形最小路径和" class="headerlink" title="4. 实战题目解析：三角形最小路径和"></a>4. 实战题目解析：三角形最小路径和</h4><h5 id="实战题目-5"><a href="#实战题目-5" class="headerlink" title="实战题目"></a>实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/climbing-stairs/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/climbing-stairs/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/triangle/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/triangle/description/</a></li>
<li><a href="https://leetcode.com/problems/triangle/discuss/38735/Python-easy-to-understand-solutions-(top-down-bottom-up" target="_blank" rel="noopener">https://leetcode.com/problems/triangle/discuss/38735/Python-easy-to-understand-solutions-(top-down-bottom-up</a>)</li>
<li><a href="https://leetcode-cn.com/problems/maximum-subarray/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-subarray/</a></li>
<li><a href="https://leetcode-cn.com/problems/maximum-product-subarray/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-product-subarray/description/</a></li>
<li><a href="https://leetcode.com/problems/coin-change/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/coin-change/description/</a></li>
</ul>
<h4 id="5-实战题目解析：最大子序列和"><a href="#5-实战题目解析：最大子序列和" class="headerlink" title="5. 实战题目解析：最大子序列和"></a>5. 实战题目解析：最大子序列和</h4><h5 id="实战题目-6"><a href="#实战题目-6" class="headerlink" title="实战题目"></a>实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/climbing-stairs/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/climbing-stairs/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/triangle/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/triangle/description/</a></li>
<li><a href="https://leetcode.com/problems/triangle/discuss/38735/Python-easy-to-understand-solutions-(top-down-bottom-up" target="_blank" rel="noopener">https://leetcode.com/problems/triangle/discuss/38735/Python-easy-to-understand-solutions-(top-down-bottom-up</a>)</li>
<li><a href="https://leetcode-cn.com/problems/maximum-subarray/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-subarray/</a></li>
<li><a href="https://leetcode-cn.com/problems/maximum-product-subarray/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-product-subarray/description/</a></li>
<li><a href="https://leetcode.com/problems/coin-change/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/coin-change/description/</a></li>
</ul>
<h4 id="6-实战题目解析：打家劫舍"><a href="#6-实战题目解析：打家劫舍" class="headerlink" title="6. 实战题目解析：打家劫舍"></a>6. 实战题目解析：打家劫舍</h4><h5 id="实战题目-7"><a href="#实战题目-7" class="headerlink" title="实战题目"></a>实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/house-robber/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/house-robber/</a></li>
<li><a href="https://leetcode-cn.com/problems/house-robber-ii/description/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/house-robber-ii/description/</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/#/description" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/#/description</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/solution/yi-ge-fang-fa-tuan-mie-6-dao-gu-piao-wen-ti-by-l-3/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/solution/yi-ge-fang-fa-tuan-mie-6-dao-gu-piao-wen-ti-by-l-3/</a></li>
</ul>
<h5 id="高级-DP-实战题目"><a href="#高级-DP-实战题目" class="headerlink" title="高级 DP 实战题目"></a>高级 DP 实战题目</h5><ul>
<li><a href="https://leetcode-cn.com/problems/perfect-squares/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/perfect-squares/</a></li>
<li><a href="https://leetcode-cn.com/problems/edit-distance/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/edit-distance/ </a>（重点）</li>
<li><a href="https://leetcode-cn.com/problems/jump-game/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/jump-game/</a></li>
<li><a href="https://leetcode-cn.com/problems/jump-game-ii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/jump-game-ii/</a></li>
<li><a href="https://leetcode-cn.com/problems/unique-paths/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/unique-paths/</a></li>
<li><a href="https://leetcode-cn.com/problems/unique-paths-ii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/unique-paths-ii/</a></li>
<li><a href="https://leetcode-cn.com/problems/unique-paths-iii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/unique-paths-iii/</a></li>
<li><a href="https://leetcode-cn.com/problems/coin-change/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/coin-change/</a></li>
<li><a href="https://leetcode-cn.com/problems/coin-change-2/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/coin-change-2/</a></li>
</ul>
<p><strong>注意：请大家先消化前面的实战题目，高级 DP 的方法和题解会在课程后面解锁。</strong></p>
<h5 id="课后作业-7"><a href="#课后作业-7" class="headerlink" title="课后作业"></a>课后作业</h5><ul>
<li><a href="https://leetcode-cn.com/problems/longest-valid-parentheses/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/longest-valid-parentheses/</a></li>
<li><a href="https://leetcode-cn.com/problems/minimum-path-sum/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/minimum-path-sum/</a></li>
<li><a href="https://leetcode-cn.com/problems/edit-distance/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/edit-distance/</a></li>
<li><a href="https://leetcode-cn.com/problems/decode-ways" target="_blank" rel="noopener">https://leetcode-cn.com/problems/decode-ways</a></li>
<li><a href="https://leetcode-cn.com/problems/maximal-square/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximal-square/</a></li>
<li><a href="https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/max-sum-of-rectangle-no-larger-than-k/</a></li>
<li><a href="https://leetcode-cn.com/problems/frog-jump/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/frog-jump/</a></li>
<li><a href="https://leetcode-cn.com/problems/split-array-largest-sum" target="_blank" rel="noopener">https://leetcode-cn.com/problems/split-array-largest-sum</a></li>
<li><a href="https://leetcode-cn.com/problems/student-attendance-record-ii/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/student-attendance-record-ii/</a></li>
<li><a href="https://leetcode-cn.com/problems/task-scheduler/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/task-scheduler/</a></li>
<li><a href="https://leetcode-cn.com/problems/palindromic-substrings/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/palindromic-substrings/</a></li>
<li><a href="https://leetcode-cn.com/problems/minimum-window-substring/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/minimum-window-substring/</a></li>
<li><a href="https://leetcode-cn.com/problems/burst-balloons/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/burst-balloons/</a></li>
</ul>
<h2 id="第六周"><a href="#第六周" class="headerlink" title="第六周"></a>第六周</h2><h3 id="第十三课-字典树和并查集"><a href="#第十三课-字典树和并查集" class="headerlink" title="第十三课  字典树和并查集"></a>第十三课  字典树和并查集</h3><h4 id="1-Trie树的基本实现和特性"><a href="#1-Trie树的基本实现和特性" class="headerlink" title="1. Trie树的基本实现和特性"></a>1. Trie树的基本实现和特性</h4><h5 id="参考链接-16"><a href="#参考链接-16" class="headerlink" title="参考链接"></a>参考链接</h5><ul>
<li><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/" target="_blank" rel="noopener">二叉树的层次遍历</a></li>
<li><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/solution/" target="_blank" rel="noopener">实现 Trie</a></li>
<li><a href="https://shimo.im/docs/Pk6vPY3HJ9hKkh33" target="_blank" rel="noopener">Tire 树代码模板</a></li>
</ul>
<h6 id="Trie树模板"><a href="#Trie树模板" class="headerlink" title="Trie树模板"></a>Trie树模板</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Python版</span><br><span class="line">class Trie(object):</span><br><span class="line">  </span><br><span class="line">	def __init__(self): </span><br><span class="line">		self.root &#x3D; &#123;&#125; </span><br><span class="line">		self.end_of_word &#x3D; &quot;#&quot; </span><br><span class="line"> </span><br><span class="line">	def insert(self, word): </span><br><span class="line">		node &#x3D; self.root </span><br><span class="line">		for char in word: </span><br><span class="line">			node &#x3D; node.setdefault(char, &#123;&#125;) </span><br><span class="line">		node[self.end_of_word] &#x3D; self.end_of_word </span><br><span class="line"> </span><br><span class="line">	def search(self, word): </span><br><span class="line">		node &#x3D; self.root </span><br><span class="line">		for char in word: </span><br><span class="line">			if char not in node: </span><br><span class="line">				return False </span><br><span class="line">			node &#x3D; node[char] </span><br><span class="line">		return self.end_of_word in node </span><br><span class="line"> </span><br><span class="line">	def startsWith(self, prefix): </span><br><span class="line">		node &#x3D; self.root </span><br><span class="line">		for char in prefix: </span><br><span class="line">			if char not in node: </span><br><span class="line">				return False </span><br><span class="line">			node &#x3D; node[char] </span><br><span class="line">		return True</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>hello-world</title>
    <url>/2019/12/25/hello-world-1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>分类1</category>
        <category>分类2</category>
      </categories>
      <tags>
        <tag>标签1</tag>
        <tag>标签2</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
